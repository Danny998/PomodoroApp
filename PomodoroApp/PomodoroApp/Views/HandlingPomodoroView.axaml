<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 xmlns:vm="using:PomodoroApp.ViewModels"
             mc:Ignorable="d" d:DesignWidth="1366" d:DesignHeight="768"
			 xmlns:materialIcons="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
             x:Class="PomodoroApp.Views.HandlingPomodoroView"
			 xmlns:controls="clr-namespace:PomodoroApp.Controls;assembly=PomodoroApp"
			 x:DataType="vm:HandlingPomodoroViewModel"
			 x:CompileBindings="True"
			 FontSize="50">
	<Design.DataContext>
		<!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
		<vm:HandlingPomodoroViewModel />
	</Design.DataContext>
	<Grid>
		<Grid.ColumnDefinitions >
			<ColumnDefinition Width="*" />
			<ColumnDefinition MinWidth="250" Width="2*" MaxWidth="450" />
			<ColumnDefinition Width="*"/>
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition MinHeight="100" />
			<RowDefinition MinHeight="250" Height="2*" />
			<RowDefinition />
		</Grid.RowDefinitions>
		<ItemsControl Grid.ColumnSpan="3"
					  Grid.Row="0"
			  ItemsSource="{Binding CycleControl}"
	HorizontalAlignment="Center"
	VerticalAlignment="Center">
			<ItemsControl.ItemsPanel>
				<ItemsPanelTemplate>
					<WrapPanel Height="150"
							   Orientation="Horizontal"
							   VerticalAlignment="Stretch"
							   HorizontalAlignment="Stretch"/>
				</ItemsPanelTemplate>
			</ItemsControl.ItemsPanel>
		</ItemsControl>
		<Grid Grid.Row="1" Grid.Column="1" Margin="5">
			<Button x:Name="Button" HorizontalAlignment="Stretch"
					Width="{Binding $self.Bounds.Height}"
					VerticalAlignment="Stretch"
					HorizontalContentAlignment="Stretch"
					VerticalContentAlignment="Stretch"
					Command="{Binding TimerCommand}"
					>
				<Button.Styles>
					<Style Selector="Button">
						<Setter Property="Background" Value="Transparent" />
					</Style>
					<Style Selector="Button:focus  /template/ ContentPresenter, 
						   Button:focus-within /template/ ContentPresenter, 
						   Button:pressed /template/ ContentPresenter,
						   Button:pointerover /template/ ContentPresenter,
						   Button:disabled /template/ ContentPresenter">
						<Setter Property="TextBlock.Background" Value="Transparent" />
					</Style>
					<Style Selector="Button:pressed /template/ ContentPresenter">
						<Setter Property="RenderTransform" Value="scale(0.9)" />
					</Style>
				</Button.Styles>
				<Button.Content>
					<Grid>
						<Ellipse x:Name="anEllipse" Width="{Binding $self.Bounds.Height}" Stretch="Uniform" Fill="#BB4949" />
						<controls:ProgressControl x:Name="Ellipse" Diameter="{Binding $parent.Bounds.Width}" Thickness="5" Progress="{Binding Progress}" OldProgress="{Binding OldProgress}" Animate="{Binding Animate}" />
					</Grid>
				</Button.Content>
			</Button>
			<TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding TimeSpan,StringFormat=\{0:mm\\:ss\}}"/>
		</Grid>
		<StackPanel Grid.Row="3"
					Grid.ColumnSpan="3"
					Orientation="Horizontal"
					HorizontalAlignment="Center"
					VerticalAlignment="Center"
					Spacing="50">
			<Button Command="{Binding CoffeeBreakCommand}">
				<Button.Content>
					<materialIcons:MaterialIcon Height="48" Width="48" Kind="Coffee" />
				</Button.Content>
			</Button>
			<Button Command="{Binding ExitCommand}">
				<Button.Content>
					<materialIcons:MaterialIcon
						Height="48"
						Width="48"
						Kind="StopCircleOutline"/>
				</Button.Content>
			</Button>
		</StackPanel>
	</Grid>
</UserControl>
